#CC should be in environment
#CC = cc -fast -xO5 -xchip=ultra -xarch=v8plusa
#CC = gcc -O3 -march=i586 -ffast-math
DFLAG = -DMMPUT -DHOLD_ATOMIC_MAPS=0 -DHOLD_DOCLENS=1 -g
IFLAG = -I.
SHELL = /bin/sh
CFLAGS = $(OFLAG) $(DFLAG) $(IFLAG) -L.
YACC = bison -y
YFLAGS = -v -d
LEX = flex
LFLAGS = -t
PARSEFLAGS =

HEADERS=defines.h parms.h bss.h bss_defaults.h \
	charclass.h bss_errors.h para.h bss_protos.h \
	win32extras.h bss_indexing.h hash.h

IHEADERS=i0_defs.h

HEADERS1=i1_defs.h

SOURCES = bss_lookup.c bss_globs.c bss_db.c bss_db_desc.c bss_combine.c \
	bss_sets.c bss_show.c bss_misc.c bss_funcs.c \
	bss_extract.c bss_errors.c bss_passages.c \
	bss_readrecs.c \
	utils.c isdewey.c \
	porter.c realport.c gslsubs.c \
	weightsubs.c extsubs.c Toktab.c \
	setup_toktab.c para.c sentence.c \
	i0_parse+.y i0_reader+.l i0_main.c win32extras.c \
	hashsubs.c

SOURCES1 = i1_main.c 

ISOURCES = ix1.c ixf.c ixsubs.c mergeonly.c mergeonly_gen.c \
	ix_deconstruct.c ok-test.c ok-script.c ok-extract.c ok-query.c

CONVSOURCES = convert_runtime.c make_parafile.c make_para_rec.c

L_OBJS= bss_lookup.o bss_globs.o bss_db.o bss_db_desc.o bss_combine.o \
	bss_errors.o bss_readrecs.o \
	bss_sets.o bss_show.o bss_misc.o bss_funcs.o \
	bss_extract.o bss_passages.o \
	utils.o  isdewey.o \
	porter.o realport.o gslsubs.o Toktab.o \
	weightsubs.o extsubs.o \
	para.o sentence.o hashsubs.o 

Y_OBJS=	i0_parse+.o i0_reader+.o i0_main.o

all:	ok-test ok-script ok-extract ok-query

libs:	libbss.a libi0+.a

libbss.a:	$(L_OBJS) $(HEADERS) $(IHEADERS) bss_version.o
	rm -f libbss.a
	ar -r libbss.a $(L_OBJS) bss_version.o

libbss.so:	$(L_OBJS) $(HEADERS) $(IHEADERS) bss_version.o
		$(CC) $(CFLAGS) -G -o $@ $(L_OBJS) bss_version.o

$(L_OBJS):	$(HEADERS) $(SOURCES)

bss_version.c:
		version=`cat bss_VERSION`;\
		echo "char *version=\"$$version\" ;">tmpvers.$$$$;\
		echo "char *vdate=\"`date +%Y%m%d%H%M`\" ;" >> tmpvers.$$$$;\
		mv -f tmpvers.$$$$ bss_version.c

bss_version.o:	bss_VERSION bss_version.c
		$(CC) -c bss_version.c
		rm bss_version.c

libi0+.a: 	$(L_OBJS) $(HEADERS) $(Y_OBJS) $(IHEADERS) bss_version.o
		ar -r libi0+.a $(L_OBJS) $(Y_OBJS) bss_version.o

libi0+.so:	$(L_OBJS) $(HEADERS) $(Y_OBJS) $(IHEADERS) bss_version.o
		$(CC) $(CFLAGS) -G -o $@ $(L_OBJS) $(Y_OBJS) bss_version.o

ok-test:	ok-test.c $(HEADERS1) libi0+.a
	$(CC) $(CFLAGS) -o $@ ok-test.c -li0+ -lm

ok-script:	ok-script.c $(HEADERS1) libi0+.a
	$(CC) $(CFLAGS) -o $@ ok-script.c -li0+ -lm

ok-extract:	ok-extract.c $(HEADERS1) libi0+.a
	$(CC) $(CFLAGS) -o $@ ok-extract.c -li0+ -lm

ok-query:	ok-query.c $(HEADERS1) libi0+.a
	$(CC) $(CFLAGS) -o $@ ok-query.c -li0+ -lm

etags:	 TAGS

TAGS:	$(SOURCES) $(HEADERS) $(SOURCES1) $(ISOURCES) $(CONVSOURCES)
	etags -t $(SOURCES) $(HEADERS) $(IHEADERS) $(HEADERS1) \
	$(SOURCES1) $(ISOURCES) $(CONVSOURCES)

install:	install_libs install_ok1 install_ok2 install_ok3 install_ok4

install_libs:	libbss.a libi0+.a
	version=`cat bss_VERSION`;\
        for f in libbss libi0+;\
	do cp -p $$f.a $$OKLIB/$$f.$$version.a;done

install_ok1:	ok-test
	version=`cat bss_VERSION`;\
	mv ok-test $$OKLIB/ok-test.$$version

install_ok2:	ok-script
	version=`cat bss_VERSION`;\
	mv ok-script $$OKLIB/ok-script.$$version

install_ok3:	ok-extract
	version=`cat bss_VERSION`;\
	mv ok-extract $$OKLIB/ok-extract.$$version

install_ok4:	ok-query
	version=`cat bss_VERSION`;\
	mv ok-query $$OKLIB/ok-query.$$version
